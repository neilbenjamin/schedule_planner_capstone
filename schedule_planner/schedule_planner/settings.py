"""
Django settings for schedule_planner project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from django.urls import reverse_lazy

# Import os for environment variables and dj_database_url for PostgreSQL
import os
import dj_database_url  # Already there, good!

# Add this import for WhiteNoise static files (after installing WhiteNoise)
# from whitenoise.storage import CompressedManifestStaticFilesStorage # For
# older Django/WhiteNoise
# For Django 4.0+ and WhiteNoise 6.0+, this is typically how you set it up
# in STORAGES
# However, for simplicity, we'll configure it directly in STATICFILES_STORAGE

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Use an environment variable for SECRET_KEY in production!

# Security settings for production
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

CSRF_TRUSTED_ORIGINS = [
    'https://schedule-planner-rvy8.onrender.com',
    # Add any other origins if your site can be embedded or has other entry
    #  points,
    # e.g., 'https://www.yourcustomdomain.com' if you add one later
]

SECRET_KEY = os.environ.get("SECRET_KEY", "django-insecure-&tlrs71*5ho#q+aw3#-c^e$uf!nv66ri")
# The hardcoded string is a fallback for local dev if the env var isn't set,
# but ensure the env var is set on Render.

# SECURITY WARNING: don't run with debug turned on in production!
# Control DEBUG with an environment variable
# DEBUG = os.environ.get('DJANGO_DEBUG', 'False') == 'True'
DEBUG = True  # TEMPORARY: Set to True for local debugging

# Set ALLOWED_HOSTS dynamically for Render
# Render automatically sets the RENDER_EXTERNAL_HOSTNAME environment variable.
# For local development, it will default to localhost and 127.0.0.1
ALLOWED_HOSTS = [
    '127.0.0.1',  # For local development
    'localhost',  # For local development
    'schedule-planner-rvy8.onrender.com',  # Your specific Render URL
    # Add any custom domains here later if you use them, e.g.,
    #  'www.yourdomain.com'
]


# Application definition

INSTALLED_APPS = [
    "planner",
    "accounts",
    "crispy_forms",
    'crispy_bootstrap5',
    'django_extensions',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "schedule_planner.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "schedule_planner.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Default to SQLite for local development
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

if 'DATABASE_URL' in os.environ:
    DATABASES['default'] = dj_database_url.config(
        conn_max_age=600,
        ssl_require=True
    )


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"

STATIC_ROOT = BASE_DIR / "staticfiles"

STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

# Restricted View redirect
LOGIN_URL = reverse_lazy('accounts:login')

# Bootstratp & Crispy Form

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
